[{"/home/jenius/qrform/src/index.js":"1","/home/jenius/qrform/src/App.js":"2","/home/jenius/qrform/src/reportWebVitals.js":"3","/home/jenius/qrform/src/Generator.js":"4","/home/jenius/qrform/src/components/ReactQRScanner/ReactQRScanner.js":"5","/home/jenius/qrform/src/components/ReactQRGenerator/ReactQRGenerator.js":"6","/home/jenius/qrform/src/Scanner.js":"7","/home/jenius/qrform/src/ReportForm.js":"8","/home/jenius/qrform/src/components/ReportFormComponent/ReportFormComponent.js":"9","/home/jenius/qrform/src/Navigation.js":"10"},{"size":502,"mtime":1610546580102,"results":"11","hashOfConfig":"12"},{"size":1063,"mtime":1610598199352,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610197831474,"results":"14","hashOfConfig":"12"},{"size":316,"mtime":1610591425392,"results":"15","hashOfConfig":"12"},{"size":3055,"mtime":1610590474836,"results":"16","hashOfConfig":"12"},{"size":706,"mtime":1610591193375,"results":"17","hashOfConfig":"12"},{"size":394,"mtime":1610590218157,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1610550687667,"results":"19","hashOfConfig":"12"},{"size":4398,"mtime":1610597681300,"results":"20","hashOfConfig":"12"},{"size":1324,"mtime":1610598251329,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"o5huvq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jenius/qrform/src/index.js",[],["45","46"],"/home/jenius/qrform/src/App.js",[],"/home/jenius/qrform/src/reportWebVitals.js",[],"/home/jenius/qrform/src/Generator.js",[],"/home/jenius/qrform/src/components/ReactQRScanner/ReactQRScanner.js",[],"/home/jenius/qrform/src/components/ReactQRGenerator/ReactQRGenerator.js",["47","48","49","50"],"import React, { useState, useEffect } from 'react';\nimport QRCode from 'qrcode.react';\nimport { v4 as uuidv4 } from 'uuid'; \n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\n\n\n\nfunction ReactQRMaker() {\n    // component, faults, and id are going to be passed into the object\n    const testObject = {\n        id: uuidv4(),\n        component: \"PlayStation\",\n        system: \"S1\"\n    }\n    const testObjectJSON = JSON.stringify(testObject)\n\n    \n    return(\n        <div className=\"generator\">\n            <QRCode \n                value={testObjectJSON}\n                size={256}\n            />\n        </div>\n    )\n}\n\nexport default ReactQRMaker;","/home/jenius/qrform/src/Scanner.js",[],"/home/jenius/qrform/src/ReportForm.js",[],"/home/jenius/qrform/src/components/ReportFormComponent/ReportFormComponent.js",["51","52","53","54","55","56"],"import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; \nimport './ReportFormComponent.css'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\n\nfunction ReportFormComponent() {\n    const [report, setReport] = useState(\n        {\n            component: \"\",\n            system: \"\",\n            fault: \"\"\n        }\n    ); \n\n    // set report as text that user has entered\n    const handleSubmitReport= (event) => {\n        event.preventDefault();\n        setReport(\n            {\n                component: component,\n                system: system,\n                fault: fault\n            }\n\n        );\n        console.log(report.component, report.system, report.fault)\n    }\n\n    const [component, setComponent] = useState(\"\")\n    const handleComponent = (event) => {\n        setComponent(event.target.value)\n    }\n\n    const [fault, setFault] = useState(\"\")\n    const handleFault = (event) => {\n        setFault(event.target.value)\n    }\n\n    const [system, setSystem] = useState(\"\")\n    const handleSystem = (event) => {\n        setSystem(event.target.value)\n    }\n\n    // I should hardcode the components in a tree view in the future\n    /* for now I should use a Bootstrap Form combined with the buttons etc. */\n    return(\n        /* className='mt-3' means that margin-top size of to $spacer */\n        /* see https://getbootstrap.com/docs/4.0/utilities/spacing/ */\n        <Container>\n            {/* for input type text, value is the initial value of the input */}\n            {/* <form onSubmit={handleSubmitReport}>\n                <DropdownButton id=\"dropdown-item-button\" title=\"Select System\">\n                    <Dropdown.ItemText>Select system</Dropdown.ItemText>\n                    {\n                        [1, 2, 3, 4].map(element => {\n                            return  <Dropdown.Item eventKey={`${element}`}>System{element}</Dropdown.Item>\n                        })\n                    }\n                </DropdownButton>\n                <label>\n                    What component is it?\n                    <input type=\"text\" value={component} onChange={handleComponent}/>\n                </label>\n                <label>\n                    Please describe the fault.\n                    <textarea value={fault} onChange={handleFault}/>\n                </label>\n                <Button type=\"submit\"></Button>\n            </form> */}\n            <Form onSubmit={handleSubmitReport}>\n                <Form.Group as={Row} controlId=\"formHorizontalText\" className='mt-3'>\n                    <Form.Label column sm={2}>\n                    Component\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control type=\"text\" placeholder=\"Enter Component\" value={component} onChange={handleComponent}/>\n                    </Col>\n                </Form.Group>\n\n                <Form.Group as={Row} controlId=\"formHorizontalTextArea\" className='mt-3'>\n                    <Form.Label column sm={2}>\n                    Fault\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control as=\"textarea\" placeholder=\"Fault Description\" value={fault} onChange={handleFault}/>\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row} className='mt-3'>\n                    <Form.Label column sm={2}>\n                        System\n                    </Form.Label>\n                    <Col sm={10}>\n                        <Form.Control as=\"select\" defaultValue=\"Choose...\">\n                            <option>Choose...</option>\n                            {\n                                [1, 2, 3, 4].map(element => {\n                                    return <option eventKey={element}>System {element}</option>\n                                })\n                            }\n                        </Form.Control>\n                    </Col>\n                </Form.Group>\n                <Button type=\"submit\">Submit!</Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default ReportFormComponent;","/home/jenius/qrform/src/Navigation.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"66","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":22},{"ruleId":"61","severity":1,"message":"65","line":1,"column":27,"nodeType":"63","messageId":"64","endLine":1,"endColumn":36},{"ruleId":"61","severity":1,"message":"68","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":22},{"ruleId":"61","severity":1,"message":"66","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":16},{"ruleId":"61","severity":1,"message":"67","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":22},{"ruleId":"61","severity":1,"message":"69","line":11,"column":8,"nodeType":"63","messageId":"64","endLine":11,"endColumn":12},{"ruleId":"61","severity":1,"message":"70","line":47,"column":11,"nodeType":"63","messageId":"64","endLine":47,"endColumn":23},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'uuidv4' is defined but never used.","'Card' is defined but never used.","'handleSystem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]